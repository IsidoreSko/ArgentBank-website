swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for fetching transactions
      parameters:
        - in: path
          name: accountId
          description: Id of account
          required: true
          type: string
      responses:
        "200":
          description: Account transactions successfully recovered
          schema:
            $ref: "#/definitions/TransactionsApiResponse"
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

  /accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get one transaction
      description: API for fetching one transaction
      parameters:
        - in: path
          name: accountId
          description: Id of account
          required: true
          type: string
        - in: path
          name: transactionId
          description: Id of transaction
          required: true
          type: string
      responses:
        "200":
          description: Transaction recovered successfully
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction category and note
      description: API for updating the category and note in a transaction
      parameters:
        - in: path
          name: accountId
          description: Id of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: Id of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Object containing the new category and the new note for the transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionCategoryAndNote"
      responses:
        "200":
          description: Request succeeded. The category and the note has been updated.
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  User:
    type: object
    required:
      - email
      - password
      - name
      - phone
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password
      name:
        type: string
      phone:
        type: string

  UserProfile:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      phone:
        type: string

  ApiResponse:
    type: object
    properties:
      message:
        type: string

  TransactionApiResponse:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            date:
              type: string
              format: date-time
            description:
              type: string
            amount:
              type: number
              format: float
            balance:
              type: number
              format: float
            detail:
              type: object
              properties:
                transactionType:
                  type: string
                category:
                  type: string
                note:
                  type: string

  TransactionsApiResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            date:
              type: string
              format: date-time
            description:
              type: string
            amount:
              type: number
              format: float
            balance:
              type: number
              format: float

  TransactionCategoryAndNote:
    type: object
    required:
      - category
      - note
    properties:
      category:
        type: string
      note:
        type: string